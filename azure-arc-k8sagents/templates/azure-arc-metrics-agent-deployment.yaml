apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-agent
  namespace: azure-arc
  labels:
    app.kubernetes.io/name: azure-arc-k8s
    app.kubernetes.io/component: metrics-agent
  annotations:
    description: {{ .Chart.Description }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: azure-arc-k8s
      app.kubernetes.io/component: metrics-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: azure-arc-k8s
        app.kubernetes.io/component: metrics-agent
      annotations:
        checksum/proxysecret: {{ include (print $.Template.BasePath "/azure-proxy-secret.yaml") . | sha256sum }}
        checksum/telegrafconf: {{ include (print $.Template.BasePath "/azure-telegraf-config.yaml") . | sha256sum }}
        checksum/fluent-bit-config: {{ include (print $.Template.BasePath "/azure-fluentbit-config.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName:
        {{- include "platformserviceaccount.name" . | indent 8 }}
{{- if .Values.systemDefaultValues.azureArcAgents.affinity }}
      affinity:
{{ toYaml .Values.systemDefaultValues.azureArcAgents.affinity | indent 8 }}
{{- end }}
{{- if .Values.systemDefaultValues.azureArcAgents.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.systemDefaultValues.azureArcAgents.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.systemDefaultValues.azureArcAgents.tolerations }}
      tolerations:
{{ toYaml .Values.systemDefaultValues.azureArcAgents.tolerations | indent 8 }}
{{- end }}
      hostIPC: false
      hostPID: false
      hostNetwork: false
      containers:
        - name: metrics-agent
          image: "{{ .Values.systemDefaultValues.image.repository }}/{{ .Values.systemDefaultValues.image.releaseName }}/{{ index .Values.systemDefaultValues "metrics-agent" "image" }}:{{ index .Values.systemDefaultValues "metrics-agent" "tag" }}"
          imagePullPolicy: {{ .Values.systemDefaultValues.image.imagePullPolicy }}
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: {{ .Values.global.containerUser}}
            runAsGroup: {{ .Values.global.containerGroup}}
{{- if .Values.systemDefaultValues.azureArcAgents.resources  }}
          resources:
{{ toYaml .Values.systemDefaultValues.azureArcAgents.resources | indent 12 }}
{{- end }}
          envFrom:
            - configMapRef:
                name: azure-clusterconfig
          {{ if .Values.global.isProxyEnabled }}
            - secretRef:
                name: proxy-config
          {{ end }}
          env:
            - name: DP_SUFFIX
              value: {{ if or (hasPrefix "usgov" (.Values.global.location | lower)) (hasPrefix "usdod" (.Values.global.location | lower)) }}"us"{{ else if (hasPrefix "china" (.Values.global.location | lower))}}"cn"{{ else }}"com"{{ end }}

          volumeMounts:
            - name: telegraf-conf
              mountPath: /etc/telegraf/telegraf.conf
              subPath: telegraf.conf
{{- if and (or .Values.global.isCustomCert .Values.global.isProxyEnabled) (.Values.global.proxyCert) }}
            - name: ssl-certs
              mountPath: /etc/ssl/certs/
              readOnly: false
            - mountPath: /usr/local/share/ca-certificates/proxy-cert.crt
              subPath: proxy-cert.crt
              name: proxy-certstore
{{- end }}
        - name: fluent-bit
          image: "{{ .Values.systemDefaultValues.image.repository }}/{{ .Values.systemDefaultValues.image.releaseName }}/{{ index .Values.systemDefaultValues "fluent-bit" "image" }}:{{ index .Values.systemDefaultValues "fluent-bit" "tag" }}"
          imagePullPolicy: {{ .Values.systemDefaultValues.image.imagePullPolicy }}
          securityContext:
            readOnlyRootFilesystem: true
            {{ if eq .Values.global.kubernetesDistro "openshift" }}
            privileged: true
            {{end}}
            capabilities:
              drop:
                - ALL
{{ $fluentBit := index .Values.systemDefaultValues "fluent-bit" "resources" }}
{{- if  $fluentBit  }}
          resources:
{{ $fluentBit | toYaml | indent 12 }}
{{- end }}
          envFrom:
            - configMapRef:
                name: azure-clusterconfig
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: AGENT_TYPE
              value: "ConnectAgent"
            - name: AGENT_NAME
              value: "MetricsAgent"
          volumeMounts:
          - name: varlog
            mountPath: /var/log
            readOnly: true
          - name: varlibdockercontainers
            mountPath: {{ index .Values.systemDefaultValues "fluent-bit" "containerLogPath" }}
            readOnly: true
          - name: fluentbit-clusterconfig
            mountPath: /fluent-bit/etc/
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: {{ index .Values.systemDefaultValues "fluent-bit" "containerLogPath" }}
        - name: fluentbit-clusterconfig
          configMap:
            name: azure-fluentbit-config
        - name: telegraf-conf
          configMap:
            name: azure-telegraf-config
{{- if and (or .Values.global.isCustomCert .Values.global.isProxyEnabled) (.Values.global.proxyCert) }}
        - name: proxy-certstore
          secret:
            secretName: proxy-cert
        - name: ssl-certs
          emptyDir: {}
{{- end }}
