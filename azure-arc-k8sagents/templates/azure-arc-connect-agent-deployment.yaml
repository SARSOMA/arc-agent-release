{{- if and (.Values.systemDefaultValues.spnOnboarding ) (not .Values.systemDefaultValues.appliance.enabled)}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connect-agent
  namespace: azure-arc
  labels:
    app.kubernetes.io/name:  azure-arc-k8s
    app.kubernetes.io/component: connect-agent
  annotations:
    description: {{ .Chart.Description }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: azure-arc-k8s
      app.kubernetes.io/component: connect-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: azure-arc-k8s
        app.kubernetes.io/component: connect-agent
      annotations:
        checksum/proxysecret: {{ include (print $.Template.BasePath "/azure-proxy-secret.yaml") . | sha256sum }}
    spec:
      serviceAccountName:
        {{- include "platformserviceaccount.name" . | indent 8 }}
{{- if .Values.systemDefaultValues.azureArcAgents.affinity }}
      affinity:
{{ toYaml .Values.systemDefaultValues.azureArcAgents.affinity | indent 8 }}
{{- end }}
{{- if .Values.systemDefaultValues.azureArcAgents.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.systemDefaultValues.azureArcAgents.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.systemDefaultValues.azureArcAgents.tolerations }}
      tolerations:
{{ toYaml .Values.systemDefaultValues.azureArcAgents.tolerations | indent 8 }}
{{- end }}
      hostIPC: false
      hostPID: false
      hostNetwork: false
      containers:      
        - name: connect-agent
          image: "{{ .Values.systemDefaultValues.image.repository }}/{{ .Values.systemDefaultValues.image.releaseName }}/{{ index .Values.systemDefaultValues "connect-agent" "image" }}:{{ index .Values.systemDefaultValues "connect-agent" "tag" }}"
          imagePullPolicy: {{ .Values.systemDefaultValues.image.imagePullPolicy }}
{{ $connectAgentResource := index .Values.systemDefaultValues "connect-agent" "resources" }}
{{- if  $connectAgentResource  }}
          resources:
{{ $connectAgentResource | toYaml | indent 12 }}
{{- end }}
          envFrom:
          - configMapRef:
              name: azure-clusterconfig
          {{ if .Values.global.isProxyEnabled }}
          - secretRef:
              name: proxy-config
          {{ end }}
          env:
          - name: AZURE_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: azure-arc-onboarding
                key: value
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: {{ .Values.global.containerUser}}
            runAsGroup: {{ .Values.global.containerGroup}}
          {{ if .Values.systemDefaultValues.IsDebug}}
          ports:
            - containerPort: 40000
              name: debug
              protocol: TCP
          securityContext:
            capabilities:
              add:
                - SYS_PTRACE
          {{end}}
{{- if and (or .Values.global.isCustomCert .Values.global.isProxyEnabled) (.Values.global.proxyCert) }}
          volumeMounts:
              - name: ssl-certs
                mountPath: /etc/ssl/certs/
                readOnly: false
              - mountPath: /usr/local/share/ca-certificates/proxy-cert.crt
                subPath: proxy-cert.crt
                name: proxy-certstore
      volumes:
        - name: proxy-certstore
          secret:
            secretName: proxy-cert
        - name: ssl-certs
          emptyDir: {}
{{- end }}
{{- end }}